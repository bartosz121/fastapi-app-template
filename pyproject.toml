[project]
name = "todo-api"
version = "0.1.0"
requires-python = ">=3.13"
description = ""
authors = [{ name = "bartosz121", email = "bmagiera121@gmail.com" }]
readme = "README.md"
dependencies = [
    "fastapi==0.115.12",
    "argon2-cffi>=23.1.0",
    "httptools>=0.6.4",
    "passlib>=1.7.4",
    "prometheus-client>=0.21.1",
    "pydantic-settings>=2.8.1",
    "pyjwt>=2.10.1",
    "sqlalchemy[asyncio]>=2.0.40",
    "structlog>=25.2.0",
    "uvicorn[standard]>=0.34.1",
    "uvloop>=0.21.0",
]


[dependency-groups]
dev = [
    "ruff>=0.11.5",
    "pyright>=1.1.399",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "pytest-sugar>=1.0.0",
    "coverage[toml]>=7.8.0",
    "faker>=37.1.0",
    "hypothesis>=6.131.0",
    "types-passlib>=1.7.7.20250408",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 99
target-version = "py313"

[tool.ruff.lint]
extend-select = ["Q", "RUF100", "C90", "UP", "I", "T20"]
isort = { combine-as-imports = true }
mccabe = { max-complexity = 15 }

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "standard"
reportUnnecessaryTypeIgnoreComment = true
venvPath = ".venv"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]


[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
